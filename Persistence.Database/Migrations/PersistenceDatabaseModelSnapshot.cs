// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Database;

#nullable disable

namespace Persistence.Database.Migrations
{
    [DbContext(typeof(PersistenceDatabase))]
    partial class PersistenceDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("rpt")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Silac.Domain.Area", b =>
                {
                    b.Property<string>("IdArea")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdLaboratorio")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdArea");

                    b.HasIndex("IdLaboratorio");

                    b.ToTable("Area", "conf");

                    b.HasData(
                        new
                        {
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Descripcion = "",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2826),
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "BIOQUÍMICA"
                        },
                        new
                        {
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Descripcion = "",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2830),
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "ENDOCRINOLOGIA"
                        },
                        new
                        {
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Descripcion = "",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2833),
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "HEMATOLOGIA"
                        },
                        new
                        {
                            IdArea = "01HTFVDD2K6YF7AVR247SDFSDF",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Descripcion = "",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2834),
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "HEPATITIS"
                        },
                        new
                        {
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Descripcion = "",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2837),
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "INMUNOLOGIA"
                        },
                        new
                        {
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Descripcion = "",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2839),
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "MARCADORES TUMORALES"
                        },
                        new
                        {
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Descripcion = "",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2841),
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "MICROBIOLOGIA"
                        },
                        new
                        {
                            IdArea = "01HTFVDVESJX8XN6H29Z3WVN9M",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Descripcion = "",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2842),
                            IdLaboratorio = "01HTFVGP4AXQY2G451F7Q8RTXY",
                            Nombre = "EMERGENCIA"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Conf.Perfil", b =>
                {
                    b.Property<string>("IdPerfil")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPerfil");

                    b.ToTable("Perfil", "conf");

                    b.HasData(
                        new
                        {
                            IdPerfil = "01HTFVC8V8BDJVZ8T4Y9GTGFXV1",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4143),
                            Nombre = "PERFIL OPERATORIO"
                        },
                        new
                        {
                            IdPerfil = "01HTFVC8V8BDJVZ8T4Y9GTGFXV2",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4146),
                            Nombre = "PERFIL LIPIDICO"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Conf.PerfilExamen", b =>
                {
                    b.Property<string>("IdPerfilExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdExamen")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdPerfil")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPerfilExamen");

                    b.HasIndex("IdExamen");

                    b.HasIndex("IdPerfil");

                    b.ToTable("PerfilExamen", "conf");

                    b.HasData(
                        new
                        {
                            IdPerfilExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4175),
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdPerfil = "01HTFVC8V8BDJVZ8T4Y9GTGFXV1"
                        },
                        new
                        {
                            IdPerfilExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4178),
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS",
                            IdPerfil = "01HTFVC8V8BDJVZ8T4Y9GTGFXV1"
                        },
                        new
                        {
                            IdPerfilExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4179),
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT",
                            IdPerfil = "01HTFVC8V8BDJVZ8T4Y9GTGFXV1"
                        },
                        new
                        {
                            IdPerfilExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4182),
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV",
                            IdPerfil = "01HTFVC8V8BDJVZ8T4Y9GTGFXV1"
                        });
                });

            modelBuilder.Entity("Silac.Domain.EquipoMedico", b =>
                {
                    b.Property<string>("IdEquipoMedico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Detalle")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdArea")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdLaboratorio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEquipoMedico");

                    b.ToTable("EquipoMedico", "conf");

                    b.HasData(
                        new
                        {
                            IdEquipoMedico = "01YTXUWJQVCSZLBN11ZGNH2DREA",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4099),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "ARCHITEC"
                        },
                        new
                        {
                            IdEquipoMedico = "01JQWFHZRYGECUOX11TFZA2SPVK",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4104),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "ACL TOP 350"
                        },
                        new
                        {
                            IdEquipoMedico = "01EGBRJZVLYHXWPQ11MLUN2FKSA",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4106),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "RUBI"
                        },
                        new
                        {
                            IdEquipoMedico = "01WYEQHZDTNMSLJG11FKAV2RIUB",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(4107),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Nombre = "SELECTRA"
                        });
                });

            modelBuilder.Entity("Silac.Domain.EquipoMedicoAnalizador", b =>
                {
                    b.Property<string>("IdEquipoMedicoAnalizador")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdEquipoMedico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SerialBaudrate")
                        .HasColumnType("int");

                    b.Property<int?>("SerialDataBit")
                        .HasColumnType("int");

                    b.Property<string>("SerialPuerto")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdEquipoMedicoAnalizador");

                    b.HasIndex("IdEquipoMedico");

                    b.ToTable("EquipoMedicoAnalizador", "conf");
                });

            modelBuilder.Entity("Silac.Domain.EquipoMedicoExamen", b =>
                {
                    b.Property<string>("IdEquipoMedicoExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CodDevuelve")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodRecibe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdEquipoMedico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEquipoMedicoExamen");

                    b.HasIndex("IdEquipoMedico");

                    b.HasIndex("IdExamen");

                    b.ToTable("EquipoMedicoExamen", "conf");
                });

            modelBuilder.Entity("Silac.Domain.Examen", b =>
                {
                    b.Property<string>("IdExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Calculado")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("CantidadDecimal")
                        .HasColumnType("int");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Color")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdArea")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdTipoMuestra")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("RangoMostrar")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("TiempoTrackingMin")
                        .HasColumnType("int");

                    b.Property<string>("TipoCongRango")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("UnidadMedida")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdExamen");

                    b.HasIndex("IdArea");

                    b.HasIndex("IdTipoMuestra");

                    b.ToTable("Examen", "conf");

                    b.HasData(
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            Abreviatura = "Urea",
                            Accion = "CREA",
                            Color = "#1d13d4",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3458),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Urea",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS",
                            Abreviatura = "TTOG",
                            Accion = "CREA",
                            Color = "#1d13d5",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3464),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Test de tolerancia Glucosa",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT",
                            Abreviatura = "TG",
                            Accion = "CREA",
                            Color = "#1d13d6",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3466),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Triglicéridos",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXU",
                            Abreviatura = "Test Tol L.",
                            Accion = "CREA",
                            Color = "#1d13d7",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3468),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Test de tolerancia Lactosa",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV",
                            Abreviatura = "Test Ác. Úrico",
                            Accion = "CREA",
                            Color = "#1d13d8",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3471),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Test de Ácido Urico",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXW",
                            Abreviatura = "Sat. Transf.",
                            Accion = "CREA",
                            Color = "#1d13d9",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3473),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "% de sat. de transferrina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "%"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXA",
                            Abreviatura = "Sat. Transf.",
                            Accion = "CREA",
                            Color = "#1d13da",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3475),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Saturación de Transferrina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "%"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXB",
                            Abreviatura = "Proteinograma",
                            Accion = "CREA",
                            Color = "#1d13db",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3477),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Proteinograma Electroforético",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "g/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXC",
                            Abreviatura = "Prot. Total",
                            Accion = "CREA",
                            Color = "#1d13dc",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3480),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Proteinas Tot. y Frac.",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "g/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXD",
                            Abreviatura = "Magnesio",
                            Accion = "CREA",
                            Color = "#1d13dd",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3483),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Magnesio",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXE",
                            Abreviatura = "Lipasa",
                            Accion = "CREA",
                            Color = "#1d13de",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3485),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Lipasa",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXF",
                            Abreviatura = "LDH",
                            Accion = "CREA",
                            Color = "#1d13df",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3487),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Deshidrogenasa Láctica",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXG",
                            Abreviatura = "HbA1c",
                            Accion = "CREA",
                            Color = "#1d13e0",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3490),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Hemoglobina Glicosilada",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "%"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXH",
                            Abreviatura = "Gluc. U.",
                            Accion = "CREA",
                            Color = "#1d13e1",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3492),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "Glucosa en orina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXI",
                            Abreviatura = "Gluc. Post P.",
                            Accion = "CREA",
                            Color = "#1d13e2",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3494),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Glucosa Post Prandial",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXJ",
                            Abreviatura = "Gluc. Basal",
                            Accion = "CREA",
                            Color = "#1d13e3",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3496),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Glucosa Basal",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXK",
                            Abreviatura = "GGTF",
                            Accion = "CREA",
                            Color = "#1d13e4",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3499),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "GGTF",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXL",
                            Abreviatura = "Fósforo U.",
                            Accion = "CREA",
                            Color = "#1d13e5",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3502),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "Fósforo en Orina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/24h"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXM",
                            Abreviatura = "Fósforo",
                            Accion = "CREA",
                            Color = "#1d13e6",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3504),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Fósforo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXN",
                            Abreviatura = "Fosf. Alcalina",
                            Accion = "CREA",
                            Color = "#1d13e7",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3506),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Fosfatasa Alcalina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXO",
                            Abreviatura = "Fe sérico",
                            Accion = "CREA",
                            Color = "#1d13e8",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3517),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "+ Fe sérico",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXP",
                            Abreviatura = "Fe sérico",
                            Accion = "CREA",
                            Color = "#1d13e9",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3520),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Fierro (Hierro) Sérico",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXQ",
                            Abreviatura = "Examen Orina",
                            Accion = "CREA",
                            Color = "#1d13ea",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3522),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "Examén de Orina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR1",
                            Abreviatura = "Electrólitos",
                            Accion = "CREA",
                            Color = "#1d13eb",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3527),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Electrólitos",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mmol/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS1",
                            Abreviatura = "Creatinina",
                            Accion = "CREA",
                            Color = "#1d13ec",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3529),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Creatinina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT1",
                            Abreviatura = "Creat. 24h",
                            Accion = "CREA",
                            Color = "#1d13ed",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3532),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "Dep. de Creatinina 24h.",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/24h"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXU1",
                            Abreviatura = "CPK Total",
                            Accion = "CREA",
                            Color = "#1d13ee",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3534),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "CPK TOTAL",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV1",
                            Abreviatura = "Col. Total",
                            Accion = "CREA",
                            Color = "#1d13ef",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3537),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Colesterol Total",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXW1",
                            Abreviatura = "Col. LDL",
                            Accion = "CREA",
                            Color = "#1d13f0",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3539),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Colesterol LDL",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXA1",
                            Abreviatura = "Col. HDL",
                            Accion = "CREA",
                            Color = "#1d13f1",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3541),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Colesterol HDL",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXB1",
                            Abreviatura = "Citoquímico",
                            Accion = "CREA",
                            Color = "#1d13f2",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3543),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCK",
                            Nombre = "Citoquímico de Líquido",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXC1",
                            Abreviatura = "Ca. Sérico",
                            Accion = "CREA",
                            Color = "#1d13f3",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3545),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Calcio Sérico",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXD1",
                            Abreviatura = "Ca. 24h",
                            Accion = "CREA",
                            Color = "#1d13f4",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3547),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "Calcio 24h.",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/24h"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXE1",
                            Abreviatura = "BUN",
                            Accion = "CREA",
                            Color = "#1d13f5",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3550),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Nitrógeno Ureico Sanguíneo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXF1",
                            Abreviatura = "Bil. Total",
                            Accion = "CREA",
                            Color = "#1d13f6",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3552),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Bilirrubina Total y Fracc.",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXG1",
                            Abreviatura = "Bil. Indirecta",
                            Accion = "CREA",
                            Color = "#1d13f7",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3555),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Bilirrubina Indirecta",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXH1",
                            Abreviatura = "Bil. Directa",
                            Accion = "CREA",
                            Color = "#1d13f8",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3557),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Bilirrubina Directa",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXI1",
                            Abreviatura = "AST",
                            Accion = "CREA",
                            Color = "#1d13f9",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3559),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "TGO (Aspartato Amino Transterasa)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXJ1",
                            Abreviatura = "Amilasa U. 24h",
                            Accion = "CREA",
                            Color = "#1d13fa",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3561),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "Amilasa en Orina (24h)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXK1",
                            Abreviatura = "Amilasa",
                            Accion = "CREA",
                            Color = "#1d13fb",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3564),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Amilasa",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXL1",
                            Abreviatura = "ALT",
                            Accion = "CREA",
                            Color = "#1d13fc",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3566),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "TGP (Alanino Amino Transferasa)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXM1",
                            Abreviatura = "Ác. Úrico",
                            Accion = "CREA",
                            Color = "#1d13fd",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3569),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Ácido Urico",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXN1",
                            Abreviatura = "TSH U.",
                            Accion = "CREA",
                            Color = "#1d13fe",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3572),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "TSH Ultrasensible",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µUI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXO1",
                            Abreviatura = "TSH",
                            Accion = "CREA",
                            Color = "#1d13ff",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3574),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "TSH",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µUI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXP1",
                            Abreviatura = "Test. Total",
                            Accion = "CREA",
                            Color = "#1d1400",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3576),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Testosterona Total",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXQ1",
                            Abreviatura = "Test. Libre",
                            Accion = "CREA",
                            Color = "#1d1401",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3579),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Testosterona Libre",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR2",
                            Abreviatura = "T4",
                            Accion = "CREA",
                            Color = "#1d1402",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3581),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "T4 Total",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS2",
                            Abreviatura = "T3 Libre",
                            Accion = "CREA",
                            Color = "#1d1403",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3583),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "T3 Libre",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "pg/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT2",
                            Abreviatura = "T3",
                            Accion = "CREA",
                            Color = "#1d1404",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3585),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "T3 Total",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXU2",
                            Abreviatura = "Prolactina",
                            Accion = "CREA",
                            Color = "#1d1405",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3592),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Pool de Prolactina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV2",
                            Abreviatura = "Prolactina",
                            Accion = "CREA",
                            Color = "#1d1406",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3595),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Prolactina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXW2",
                            Abreviatura = "Progesterona",
                            Accion = "CREA",
                            Color = "#1d1407",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3597),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Progesterona",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXA2",
                            Abreviatura = "LH",
                            Accion = "CREA",
                            Color = "#1d1408",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3599),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "LH",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mUI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXB2",
                            Abreviatura = "Ins. Post",
                            Accion = "CREA",
                            Color = "#1d1409",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3601),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Insulina Post Pandria!",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µU/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXC2",
                            Abreviatura = "Ins. Basal",
                            Accion = "CREA",
                            Color = "#1d140a",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3603),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Insulina Basal",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µU/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXD2",
                            Abreviatura = "GH",
                            Accion = "CREA",
                            Color = "#1d140b",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3606),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Hormona de Crecimiento",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXE2",
                            Abreviatura = "FSH",
                            Accion = "CREA",
                            Color = "#1d140c",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3608),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "FSH",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mUI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXF2",
                            Abreviatura = "E3 Total",
                            Accion = "CREA",
                            Color = "#1d140d",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3610),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Estriol Total",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXG2",
                            Abreviatura = "E3 Libre",
                            Accion = "CREA",
                            Color = "#1d140e",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3613),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Estriol Libre",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXH2",
                            Abreviatura = "E2",
                            Accion = "CREA",
                            Color = "#1d140f",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3615),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Estradiol",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "pg/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXI2",
                            Abreviatura = "DHEAS",
                            Accion = "CREA",
                            Color = "#1d1410",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3628),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "DHEAS",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXJ2",
                            Abreviatura = "C. pm.",
                            Accion = "CREA",
                            Color = "#1d1411",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3630),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Cortisol pm.",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXK2",
                            Abreviatura = "C. am.",
                            Accion = "CREA",
                            Color = "#1d1412",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3632),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Cortisol am.",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "µg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXL2",
                            Abreviatura = "ACTH",
                            Accion = "CREA",
                            Color = "#1d1413",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3634),
                            IdArea = "01HTFVCPCMG5V1MNCQ5XWG1CVV",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "ACTH",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "pg/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXM2",
                            Abreviatura = "VSG-WG",
                            Accion = "CREA",
                            Color = "#1d1414",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3637),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "VSG Westergree",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mm/h"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXN2",
                            Abreviatura = "VSG-W",
                            Accion = "CREA",
                            Color = "#1d1415",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3639),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "VSG Wintrobe",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mm/h"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXO2",
                            Abreviatura = "TTP",
                            Accion = "CREA",
                            Color = "#1d1416",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3642),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "T. de tromboplastina Parcial",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Segundos"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXP2",
                            Abreviatura = "TT",
                            Accion = "CREA",
                            Color = "#1d1417",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3644),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "T. de Trombina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Segundos"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXQ2",
                            Abreviatura = "TPT / INR",
                            Accion = "CREA",
                            Color = "#1d1418",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3646),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "T. de Protrombina / INR",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Segundos / Ratio"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR3",
                            Abreviatura = "TCI",
                            Accion = "CREA",
                            Color = "#1d1419",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3649),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Test Coombs Indirecto",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Positivo/Negativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS3",
                            Abreviatura = "TCD",
                            Accion = "CREA",
                            Color = "#1d141a",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3652),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Test Coombs Directo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Positivo/Negativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT3",
                            Abreviatura = "RET",
                            Accion = "CREA",
                            Color = "#1d141b",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3656),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Reticulocitos",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "%"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXU3",
                            Abreviatura = "L-PER",
                            Accion = "CREA",
                            Color = "#1d141c",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3661),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Lámina Periférica",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV3",
                            Abreviatura = "HGB / HTO",
                            Accion = "CREA",
                            Color = "#1d141d",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3664),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Hemoglobina/hto",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "g/dL / %"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXW3",
                            Abreviatura = "HEM-AUT",
                            Accion = "CREA",
                            Color = "#1d141e",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3667),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Hemograma Automatizado",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo "
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXA3",
                            Abreviatura = "GS / Rh",
                            Accion = "CREA",
                            Color = "#1d141f",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3669),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Grupo Sanguineo /Factor",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo "
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXB3",
                            Abreviatura = "GOTA",
                            Accion = "CREA",
                            Color = "#1d1420",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3671),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Gota gruesa",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Positivo/Negativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXC3",
                            Abreviatura = "FIB",
                            Accion = "CREA",
                            Color = "#1d1421",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3674),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Fibrinógeno",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXD3",
                            Abreviatura = "COAG-S",
                            Accion = "CREA",
                            Color = "#1d1422",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3676),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Coagulación y Sangria",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Segundos"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXE3",
                            Abreviatura = "CEL-LE",
                            Accion = "CREA",
                            Color = "#1d1423",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3678),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Células LE",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Positivo/Negativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXF3",
                            Abreviatura = "CC",
                            Accion = "CREA",
                            Color = "#1d1424",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3680),
                            IdArea = "01HTFVD0AKYV3AHTSPN1VJAECK",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Constantes Corpuscular",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "g/Dl"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXG3",
                            Abreviatura = "IgM Anti-HBc",
                            Accion = "CREA",
                            Color = "#1d1425",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3683),
                            IdArea = "01HTFVDD2K6YF7AVR247SDFSDF",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Hepatitis B Core IgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXH3",
                            Abreviatura = "IgM Anti-HAV",
                            Accion = "CREA",
                            Color = "#1d1426",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3686),
                            IdArea = "01HTFVDD2K6YF7AVR247SDFSDF",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Hepatitis A IgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXI3",
                            Abreviatura = "HBsAg",
                            Accion = "CREA",
                            Color = "#1d1427",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3689),
                            IdArea = "01HTFVDD2K6YF7AVR247SDFSDF",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Hepatitis B Ag Superf. (HBsAg)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXJ3",
                            Abreviatura = "Anti-HCV",
                            Accion = "CREA",
                            Color = "#1d1428",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3691),
                            IdArea = "01HTFVDD2K6YF7AVR247SDFSDF",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Hepatitis C AntiHCB",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXK3",
                            Abreviatura = "Anti-HBc",
                            Accion = "CREA",
                            Color = "#1d1429",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3693),
                            IdArea = "01HTFVDD2K6YF7AVR247SDFSDF",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Hepatitis B Anticore Total",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXL3",
                            Abreviatura = "Anti-HAV",
                            Accion = "CREA",
                            Color = "#1d142a",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3696),
                            IdArea = "01HTFVDD2K6YF7AVR247SDFSDF",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Hepatitis A total",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXM3",
                            Abreviatura = "WR",
                            Accion = "CREA",
                            Color = "#1d142b",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3698),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Waller Rose",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXN3",
                            Abreviatura = "VIT-B12",
                            Accion = "CREA",
                            Color = "#1d142c",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3700),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Vitamina B12",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "pg/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXO3",
                            Abreviatura = "VDRL",
                            Accion = "CREA",
                            Color = "#1d142d",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3702),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "VDRL",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXP3",
                            Abreviatura = "TROPO",
                            Accion = "CREA",
                            Color = "#1d142e",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3705),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Troponina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXQ3",
                            Abreviatura = "TOX-IgM",
                            Accion = "CREA",
                            Color = "#1d142f",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3708),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Toxoplasma IgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR4",
                            Abreviatura = "TOX-IgG",
                            Accion = "CREA",
                            Color = "#1d1430",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3710),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Toxoplasma IgG",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS4",
                            Abreviatura = "TORCH-IgM",
                            Accion = "CREA",
                            Color = "#1d1431",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3712),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "TORCH IgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT4",
                            Abreviatura = "TORCH-IgG",
                            Accion = "CREA",
                            Color = "#1d1432",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3714),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "TORCH IgG",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXU4",
                            Abreviatura = "SET-BRUC",
                            Accion = "CREA",
                            Color = "#1d1433",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3716),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Set de Brucela",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV4",
                            Abreviatura = "RUB-IgG",
                            Accion = "CREA",
                            Color = "#1d1434",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3718),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Rubéola IgG o IgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXW4",
                            Abreviatura = "RPR",
                            Accion = "CREA",
                            Color = "#1d1435",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3720),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "RPR",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXA4",
                            Abreviatura = "RB",
                            Accion = "CREA",
                            Color = "#1d1436",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3723),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Rosa de Bengala",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXB4",
                            Abreviatura = "PCR-CUANT",
                            Accion = "CREA",
                            Color = "#1d1437",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3737),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "PCR Cuantitativo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXC4",
                            Abreviatura = "PCR-CUAL",
                            Accion = "CREA",
                            Color = "#1d1438",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3740),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "PCR Cualitativo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXD4",
                            Abreviatura = "NTX",
                            Accion = "CREA",
                            Color = "#1d1439",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3742),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "NTX",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXE4",
                            Abreviatura = "Inmuno-M",
                            Accion = "CREA",
                            Color = "#1d143a",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3744),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Inmunoglobulina M",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXF4",
                            Abreviatura = "Inmuno-G",
                            Accion = "CREA",
                            Color = "#1d143b",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3746),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Inmunoglobulina G",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXG4",
                            Abreviatura = "Inmuno-E",
                            Accion = "CREA",
                            Color = "#1d143c",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3748),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Inmunoglobulina E",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "IU/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXH4",
                            Abreviatura = "Inmuno-A",
                            Accion = "CREA",
                            Color = "#1d143d",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3751),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Inmunoglobulina A",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXI4",
                            Abreviatura = "HV2-IgM",
                            Accion = "CREA",
                            Color = "#1d143e",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3754),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Herpes Virus 2 lgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXJ4",
                            Abreviatura = "HV2-IgG",
                            Accion = "CREA",
                            Color = "#1d143f",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3756),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Herpes Virus 2 lgG",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXK4",
                            Abreviatura = "HV1-IgM",
                            Accion = "CREA",
                            Color = "#1d1440",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3758),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Herpes Virus 1 lgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXL4",
                            Abreviatura = "HV1-IgG",
                            Accion = "CREA",
                            Color = "#1d1441",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3760),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Herpes Virus 1 lgG",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXM4",
                            Abreviatura = "HP-IgM",
                            Accion = "CREA",
                            Color = "#1d1442",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3763),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Helicobacter Pylori IgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXN4",
                            Abreviatura = "HP-IgG",
                            Accion = "CREA",
                            Color = "#1d1443",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3765),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Helicobacter Pylori IgG",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXO4",
                            Abreviatura = "HIV-WB",
                            Accion = "CREA",
                            Color = "#1d1444",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3767),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "H.I.V. (Wester Blot)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXP4",
                            Abreviatura = "HIV-RAP",
                            Accion = "CREA",
                            Color = "#1d1445",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3770),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "H.I.V. (Prueba Rápida)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXQ4",
                            Abreviatura = "HIV-I-II",
                            Accion = "CREA",
                            Color = "#1d1446",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3773),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "H.I.V. I-II (Anti. Anticuerpo)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR5",
                            Abreviatura = "HIDAT",
                            Accion = "CREA",
                            Color = "#1d1447",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3776),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Hidatidosis (W.B.)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS5",
                            Abreviatura = "HCG-CUANT",
                            Accion = "CREA",
                            Color = "#1d1448",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3778),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "HCG Beta Cuantitativo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mUI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT5",
                            Abreviatura = "HCG-CUAL",
                            Accion = "CREA",
                            Color = "#1d1449",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3780),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "HCG Beta Cualitativo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXU5",
                            Abreviatura = "FTA-PRU",
                            Accion = "CREA",
                            Color = "#1d144a",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3782),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Prueba de FTA ABS",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV5",
                            Abreviatura = "FTA",
                            Accion = "CREA",
                            Color = "#1d144b",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3785),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "FTA ABS",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXW5",
                            Abreviatura = "FR-TURB",
                            Accion = "CREA",
                            Color = "#1d144c",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3787),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Factor Reumatoideo Turb",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXA5",
                            Abreviatura = "FR-LAT",
                            Accion = "CREA",
                            Color = "#1d144d",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3789),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Factor Reumatoideo Latex",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXB5",
                            Abreviatura = "FER",
                            Accion = "CREA",
                            Color = "#1d144e",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3793),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Ferritina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXC5",
                            Abreviatura = "ESPER",
                            Accion = "CREA",
                            Color = "#1d144f",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3795),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEE",
                            Nombre = "Espermatograma",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Variado"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXD5",
                            Abreviatura = "CMV-IgM",
                            Accion = "CREA",
                            Color = "#1d1450",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3798),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Citomegalovirus IgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXE5",
                            Abreviatura = "CMV-IgG",
                            Accion = "CREA",
                            Color = "#1d1451",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3800),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Citomegalovirus IgG",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXF5",
                            Abreviatura = "CHAG",
                            Accion = "CREA",
                            Color = "#1d1452",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3802),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Chagas",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXG5",
                            Abreviatura = "C4",
                            Accion = "CREA",
                            Color = "#1d1453",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3805),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "C4 (Complemento 4)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXH5",
                            Abreviatura = "C3",
                            Accion = "CREA",
                            Color = "#1d1454",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3807),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "C3 (Complemento 3)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/dL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXI5",
                            Abreviatura = "BRU-PLA",
                            Accion = "CREA",
                            Color = "#1d1455",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3809),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Brucella en Placa",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXJ5",
                            Abreviatura = "BRU-IgM",
                            Accion = "CREA",
                            Color = "#1d1456",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3812),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Brucella IgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXK5",
                            Abreviatura = "BRU-IgG",
                            Accion = "CREA",
                            Color = "#1d1457",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3814),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Brucella IgG",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXL5",
                            Abreviatura = "AT+AP",
                            Accion = "CREA",
                            Color = "#1d1458",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3817),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "(Antitiroglobulina + Antiperoxidasa)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXM5",
                            Abreviatura = "ANCA",
                            Accion = "CREA",
                            Color = "#1d1459",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3819),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "ANCA Antineutrófilos",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXN5",
                            Abreviatura = "AG-PLA",
                            Accion = "CREA",
                            Color = "#1d145a",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3821),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Aglutinaciones en Placa",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXO5",
                            Abreviatura = "A-DNA",
                            Accion = "CREA",
                            Color = "#1d145b",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3823),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "AntiDNA Nativo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXP5",
                            Abreviatura = "AC-SCUANT",
                            Accion = "CREA",
                            Color = "#1d145c",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3825),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Antiestreptolisina Semicuant.",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXQ5",
                            Abreviatura = "AC-ML",
                            Accion = "CREA",
                            Color = "#1d145d",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3827),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Antic Músculo Liso",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR6",
                            Abreviatura = "AC-FOL",
                            Accion = "CREA",
                            Color = "#1d145e",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3830),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Acido fólico",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS6",
                            Abreviatura = "AC-CUANT",
                            Accion = "CREA",
                            Color = "#1d145f",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3843),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Antiestreptolisina Cuantit.",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UI/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT6",
                            Abreviatura = "AC-ANA",
                            Accion = "CREA",
                            Color = "#1d1460",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3845),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Antic Antinucleares (ANA)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXU6",
                            Abreviatura = "AC-AM",
                            Accion = "CREA",
                            Color = "#1d1461",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3847),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Antic Antimitocondriales",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV6",
                            Abreviatura = "AC-AC-IgM",
                            Accion = "CREA",
                            Color = "#1d1462",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3849),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Antic Anticlamydia IgM",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXW6",
                            Abreviatura = "AC-AC-IgG",
                            Accion = "CREA",
                            Color = "#1d1463",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3851),
                            IdArea = "01HTFVDD2K6YF7AVR247GRWSDE",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Antic Anticlamydia IgG",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXA6",
                            Abreviatura = "PSA Total",
                            Accion = "CREA",
                            Color = "#1d1464",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3853),
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "PSA Total",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXB6",
                            Abreviatura = "PSA Libre",
                            Accion = "CREA",
                            Color = "#1d1465",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3855),
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "PSA Libre",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXC6",
                            Abreviatura = "Índice PSA",
                            Accion = "CREA",
                            Color = "#1d1466",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3859),
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Indice de PSA",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "-"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXD6",
                            Abreviatura = "CEA",
                            Accion = "CREA",
                            Color = "#1d1467",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3861),
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "CEA (Ag. CArcinoembrionario)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXE6",
                            Abreviatura = "CA 19-9",
                            Accion = "CREA",
                            Color = "#1d1468",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3863),
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "CA 19-9 (Páncreas)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXF6",
                            Abreviatura = "CA 15-3",
                            Accion = "CREA",
                            Color = "#1d1469",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3866),
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "CA 15-3 (Mama)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXG6",
                            Abreviatura = "CA 125",
                            Accion = "CREA",
                            Color = "#1d146a",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3868),
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "CA 125 (Ovario)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "U/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXH6",
                            Abreviatura = "B2M",
                            Accion = "CREA",
                            Color = "#1d146b",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3870),
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Beta-2 Microglobulina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "mg/L"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXI6",
                            Abreviatura = "AFP",
                            Accion = "CREA",
                            Color = "#1d146c",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3874),
                            IdArea = "01HTFVDD2K6YF7AVR247NTDSWR",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Nombre = "Alla Feto Proteina",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "ng/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXJ6",
                            Abreviatura = "URO",
                            Accion = "CREA",
                            Color = "#1d146d",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3876),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "Urocultivo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UFC/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXK6",
                            Abreviatura = "HC",
                            Accion = "CREA",
                            Color = "#1d146e",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3879),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Nombre = "Hemocultivo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXL6",
                            Abreviatura = "BK-DIR-S",
                            Accion = "CREA",
                            Color = "#1d146f",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3881),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCJ",
                            Nombre = "BK Directo Seriado",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXM6",
                            Abreviatura = "BK-DIR",
                            Accion = "CREA",
                            Color = "#1d1470",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3883),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCJ",
                            Nombre = "BK Directo l",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXN6",
                            Abreviatura = "COPRO",
                            Accion = "CREA",
                            Color = "#1d1471",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3885),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCK",
                            Nombre = "Coprocultivo",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXO6",
                            Abreviatura = "CH",
                            Accion = "CREA",
                            Color = "#1d1472",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3888),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCL",
                            Nombre = "Cultivo de Hongos",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXP6",
                            Abreviatura = "CSU",
                            Accion = "CREA",
                            Color = "#1d1473",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3890),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCM",
                            Nombre = "Cultivo de Sec. Uretral",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXQ6",
                            Abreviatura = "CSV",
                            Accion = "CREA",
                            Color = "#1d1474",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3892),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCN",
                            Nombre = "Cultivo de Sec. Vaginal",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXR7",
                            Abreviatura = "CSF",
                            Accion = "CREA",
                            Color = "#1d1475",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3894),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCO",
                            Nombre = "Cultivo Sec. Faringea",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXS7",
                            Abreviatura = "FD-H",
                            Accion = "CREA",
                            Color = "#1d1476",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3897),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCL",
                            Nombre = "Frotis Directo (Hongos)",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXT7",
                            Abreviatura = "HKOH",
                            Accion = "CREA",
                            Color = "#1d1477",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3899),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCL",
                            Nombre = "Hongos - KOH",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "Cualitativo"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXU7",
                            Abreviatura = "R-ATB",
                            Accion = "CREA",
                            Color = "#1d1478",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3901),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "Removedor de ATB",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UFC/mL"
                        },
                        new
                        {
                            IdExamen = "01HTFVC8V8BDJVZ8T4Y9GTGFXV7",
                            Abreviatura = "URO",
                            Accion = "CREA",
                            Color = "#1d1479",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3903),
                            IdArea = "01HTFVDD2K6YF7AVR247HRDGDB",
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Nombre = "Urocultivo con",
                            TiempoTrackingMin = 60,
                            UnidadMedida = "UFC/mL"
                        });
                });

            modelBuilder.Entity("Silac.Domain.ExamenRango", b =>
                {
                    b.Property<string>("IdExamenRango")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("EdadFinal")
                        .HasColumnType("int");

                    b.Property<int?>("EdadInicio")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdInterpretado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SigComparativo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ValorMaximo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ValorMinimo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdExamenRango");

                    b.HasIndex("IdExamen");

                    b.ToTable("ExamenRango", "conf");
                });

            modelBuilder.Entity("Silac.Domain.Hospital", b =>
                {
                    b.Property<string>("IdHospital")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("CodigoHospital")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("Foto")
                        .HasColumnType("tinyint");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PiePagina")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SubTitulo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Titulo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IdHospital");

                    b.ToTable("Hospital", "conf");
                });

            modelBuilder.Entity("Silac.Domain.Laboratorio", b =>
                {
                    b.Property<string>("IdLaboratorio")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("CodigoLaboratorio")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdLaboratorio");

                    b.ToTable("Laboratorio", "conf");

                    b.HasData(
                        new
                        {
                            IdLaboratorio = "01HTFVGC0DHKS5CQ5SCZCQT4VW",
                            Accion = "CREA",
                            CodigoLaboratorio = "01",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2787),
                            Nombre = "LABORATORIO CENTRAL"
                        },
                        new
                        {
                            IdLaboratorio = "01HTFVGP4AXQY2G451F7Q8RTXY",
                            Accion = "CREA",
                            CodigoLaboratorio = "02",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2790),
                            Nombre = "LABORATORIO EMERGENCIA"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Lote", b =>
                {
                    b.Property<string>("IdLote")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdReactivoDet")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdLote");

                    b.ToTable("Lote", "crca");
                });

            modelBuilder.Entity("Silac.Domain.Medico", b =>
                {
                    b.Property<string>("IdMedico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdPersona")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMedico");

                    b.HasIndex("IdPersona");

                    b.ToTable("Medico", "labo");

                    b.HasData(
                        new
                        {
                            IdMedico = "01HTFSVCJC0PFRDE3RF5H4W6XA",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2263),
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XN"
                        },
                        new
                        {
                            IdMedico = "01HTFSVCJC0PFRDE3RF5H4W6XB",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2265),
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XO"
                        },
                        new
                        {
                            IdMedico = "01HTFSVCJC0PFRDE3RF5H4W6XC",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2267),
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XP"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Navbar", b =>
                {
                    b.Property<int?>("IdNavbar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IdNavbar"));

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoMenu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("icon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("routerlink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNavbar");

                    b.ToTable("Navbar", "segu");

                    b.HasData(
                        new
                        {
                            IdNavbar = 1,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2308),
                            Label = "INICIO",
                            TipoMenu = "0",
                            icon = "faHouse",
                            routerlink = ""
                        },
                        new
                        {
                            IdNavbar = 2,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2311),
                            Label = "Dashboard",
                            TipoMenu = "1",
                            icon = "faChartColumn",
                            routerlink = "/inicio"
                        },
                        new
                        {
                            IdNavbar = 3,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2313),
                            Label = "LABORATORIO",
                            TipoMenu = "0",
                            icon = "faFlaskVial",
                            routerlink = ""
                        },
                        new
                        {
                            IdNavbar = 4,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2315),
                            Label = "Ordenes",
                            TipoMenu = "1",
                            icon = "faBarcode",
                            routerlink = "/laboratorio/orden"
                        },
                        new
                        {
                            IdNavbar = 5,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2318),
                            Label = "Médico",
                            TipoMenu = "1",
                            icon = "faUserDoctor",
                            routerlink = "/laboratorio/medico"
                        },
                        new
                        {
                            IdNavbar = 6,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2320),
                            Label = "Origen",
                            TipoMenu = "1",
                            icon = "faBuilding",
                            routerlink = "/laboratorio/origen"
                        },
                        new
                        {
                            IdNavbar = 7,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2322),
                            Label = "Procedencia",
                            TipoMenu = "1",
                            icon = "faHospital",
                            routerlink = "/laboratorio/procedencia"
                        },
                        new
                        {
                            IdNavbar = 8,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2327),
                            Label = "Servicio",
                            TipoMenu = "1",
                            icon = "faHouseMedical",
                            routerlink = "/laboratorio/servicio"
                        },
                        new
                        {
                            IdNavbar = 9,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2329),
                            Label = "TRACKING",
                            TipoMenu = "0",
                            icon = "faFlaskVial",
                            routerlink = ""
                        },
                        new
                        {
                            IdNavbar = 10,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2331),
                            Label = "Tracking",
                            TipoMenu = "1",
                            icon = "faChartColumn",
                            routerlink = "/tracking"
                        },
                        new
                        {
                            IdNavbar = 11,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2333),
                            Label = "CONTROL CALIDAD",
                            TipoMenu = "0",
                            icon = "faHouse",
                            routerlink = ""
                        },
                        new
                        {
                            IdNavbar = 12,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2335),
                            Label = "Configuracion",
                            TipoMenu = "1",
                            icon = "faChartColumn",
                            routerlink = "/controlcalidad/configuracion"
                        },
                        new
                        {
                            IdNavbar = 13,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2337),
                            Label = "Resultado",
                            TipoMenu = "1",
                            icon = "faChartColumn",
                            routerlink = "/controlcalidad/resultado"
                        },
                        new
                        {
                            IdNavbar = 14,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2340),
                            Label = "REPORTES",
                            TipoMenu = "0",
                            icon = "faChartColumn",
                            routerlink = ""
                        },
                        new
                        {
                            IdNavbar = 15,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2341),
                            Label = "Orden de Paciente",
                            TipoMenu = "1",
                            icon = "faFileExcel",
                            routerlink = "/reporte/ordenporpaciente"
                        },
                        new
                        {
                            IdNavbar = 16,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2343),
                            Label = "Resultado de Paciente",
                            TipoMenu = "1",
                            icon = "faFileExcel",
                            routerlink = "/reporte/resultadopaciente"
                        },
                        new
                        {
                            IdNavbar = 17,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2345),
                            Label = "SEGURIDAD",
                            TipoMenu = "0",
                            icon = "faShield",
                            routerlink = ""
                        },
                        new
                        {
                            IdNavbar = 18,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2347),
                            Label = "Usuario",
                            TipoMenu = "1",
                            icon = "faUserNurse",
                            routerlink = "/seguridad/usuario"
                        },
                        new
                        {
                            IdNavbar = 19,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2349),
                            Label = "Rol",
                            TipoMenu = "1",
                            icon = "faIdCard",
                            routerlink = "/seguridad/rol"
                        },
                        new
                        {
                            IdNavbar = 20,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2351),
                            Label = "CONFIGURACION",
                            TipoMenu = "0",
                            icon = "faGear",
                            routerlink = ""
                        },
                        new
                        {
                            IdNavbar = 21,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2354),
                            Label = "Hospital",
                            TipoMenu = "1",
                            icon = "faHospital",
                            routerlink = "/configuracion/hospital"
                        },
                        new
                        {
                            IdNavbar = 22,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2357),
                            Label = "Laboratorio",
                            TipoMenu = "1",
                            icon = "faFlaskVial",
                            routerlink = "/configuracion/laboratorio"
                        },
                        new
                        {
                            IdNavbar = 23,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2358),
                            Label = "Areas",
                            TipoMenu = "1",
                            icon = "faLayerGroup",
                            routerlink = "/configuracion/area"
                        },
                        new
                        {
                            IdNavbar = 24,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2360),
                            Label = "Tipo de muestras",
                            TipoMenu = "1",
                            icon = "faVial",
                            routerlink = "/configuracion/tipomuestra"
                        },
                        new
                        {
                            IdNavbar = 25,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2363),
                            Label = "Examenes",
                            TipoMenu = "1",
                            icon = "faBiohazard",
                            routerlink = "/configuracion/examenes"
                        },
                        new
                        {
                            IdNavbar = 26,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2365),
                            Label = "Equipos Medicos",
                            TipoMenu = "1",
                            icon = "faLaptopMedical",
                            routerlink = "/configuracion/equipomedico"
                        },
                        new
                        {
                            IdNavbar = 27,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2367),
                            Label = "Sistema Externos",
                            TipoMenu = "1",
                            icon = "faLaptopCode",
                            routerlink = "/configuracion/sistemasexterno"
                        },
                        new
                        {
                            IdNavbar = 28,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2372),
                            Label = "Maestras",
                            TipoMenu = "1",
                            icon = "faDatabase",
                            routerlink = "/configuracion/maestro"
                        },
                        new
                        {
                            IdNavbar = 29,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2373),
                            Label = "Perfiles",
                            TipoMenu = "1",
                            icon = "faFileZipper",
                            routerlink = "/configuracion/perfiles"
                        });
                });

            modelBuilder.Entity("Silac.Domain.NavbarPermiso", b =>
                {
                    b.Property<string>("IdNavbarPermiso")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdNavbar")
                        .HasColumnType("int");

                    b.Property<string>("IdPerfil")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdUsuario")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdNavbarPermiso");

                    b.HasIndex("IdNavbar");

                    b.ToTable("NavbarPermiso", "segu");
                });

            modelBuilder.Entity("Silac.Domain.NavbarRelacion", b =>
                {
                    b.Property<int?>("IdNavbarRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IdNavbarRelacion"));

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdNavbarPrincipal")
                        .HasColumnType("int");

                    b.Property<int?>("IdNavbarSecundario")
                        .HasColumnType("int");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdNavbarRelacion");

                    b.HasIndex("IdNavbarPrincipal");

                    b.ToTable("NavbarRelacion", "segu");

                    b.HasData(
                        new
                        {
                            IdNavbarRelacion = 1,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2423),
                            IdNavbarPrincipal = 1,
                            IdNavbarSecundario = 2
                        },
                        new
                        {
                            IdNavbarRelacion = 2,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2475),
                            IdNavbarPrincipal = 3,
                            IdNavbarSecundario = 4
                        },
                        new
                        {
                            IdNavbarRelacion = 3,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2478),
                            IdNavbarPrincipal = 3,
                            IdNavbarSecundario = 5
                        },
                        new
                        {
                            IdNavbarRelacion = 4,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2480),
                            IdNavbarPrincipal = 3,
                            IdNavbarSecundario = 6
                        },
                        new
                        {
                            IdNavbarRelacion = 5,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2481),
                            IdNavbarPrincipal = 3,
                            IdNavbarSecundario = 7
                        },
                        new
                        {
                            IdNavbarRelacion = 6,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2485),
                            IdNavbarPrincipal = 3,
                            IdNavbarSecundario = 8
                        },
                        new
                        {
                            IdNavbarRelacion = 7,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2486),
                            IdNavbarPrincipal = 9,
                            IdNavbarSecundario = 10
                        },
                        new
                        {
                            IdNavbarRelacion = 9,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2488),
                            IdNavbarPrincipal = 11,
                            IdNavbarSecundario = 12
                        },
                        new
                        {
                            IdNavbarRelacion = 10,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2490),
                            IdNavbarPrincipal = 11,
                            IdNavbarSecundario = 13
                        },
                        new
                        {
                            IdNavbarRelacion = 11,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2492),
                            IdNavbarPrincipal = 14,
                            IdNavbarSecundario = 15
                        },
                        new
                        {
                            IdNavbarRelacion = 12,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2494),
                            IdNavbarPrincipal = 14,
                            IdNavbarSecundario = 16
                        },
                        new
                        {
                            IdNavbarRelacion = 13,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2496),
                            IdNavbarPrincipal = 17,
                            IdNavbarSecundario = 18
                        },
                        new
                        {
                            IdNavbarRelacion = 14,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2498),
                            IdNavbarPrincipal = 17,
                            IdNavbarSecundario = 19
                        },
                        new
                        {
                            IdNavbarRelacion = 16,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2500),
                            IdNavbarPrincipal = 20,
                            IdNavbarSecundario = 21
                        },
                        new
                        {
                            IdNavbarRelacion = 17,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2502),
                            IdNavbarPrincipal = 20,
                            IdNavbarSecundario = 22
                        },
                        new
                        {
                            IdNavbarRelacion = 18,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2504),
                            IdNavbarPrincipal = 20,
                            IdNavbarSecundario = 23
                        },
                        new
                        {
                            IdNavbarRelacion = 19,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2506),
                            IdNavbarPrincipal = 20,
                            IdNavbarSecundario = 24
                        },
                        new
                        {
                            IdNavbarRelacion = 20,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2508),
                            IdNavbarPrincipal = 20,
                            IdNavbarSecundario = 25
                        },
                        new
                        {
                            IdNavbarRelacion = 21,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2510),
                            IdNavbarPrincipal = 20,
                            IdNavbarSecundario = 26
                        },
                        new
                        {
                            IdNavbarRelacion = 22,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2512),
                            IdNavbarPrincipal = 20,
                            IdNavbarSecundario = 27
                        },
                        new
                        {
                            IdNavbarRelacion = 23,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2514),
                            IdNavbarPrincipal = 20,
                            IdNavbarSecundario = 28
                        },
                        new
                        {
                            IdNavbarRelacion = 24,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2516),
                            IdNavbarPrincipal = 20,
                            IdNavbarSecundario = 29
                        });
                });

            modelBuilder.Entity("Silac.Domain.NavbarRelacionRol", b =>
                {
                    b.Property<int>("IdNavbarRelacionRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNavbarRelacionRol"));

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNavbarRelacion")
                        .HasColumnType("int");

                    b.Property<string>("IdRol")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("navbarRelacionIdNavbarRelacion")
                        .HasColumnType("int");

                    b.HasKey("IdNavbarRelacionRol");

                    b.HasIndex("IdRol");

                    b.HasIndex("navbarRelacionIdNavbarRelacion");

                    b.ToTable("NavbarRelacionRol", "segu");

                    b.HasData(
                        new
                        {
                            IdNavbarRelacionRol = 1,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2607),
                            IdNavbarRelacion = 1,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 2,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2610),
                            IdNavbarRelacion = 2,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 3,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2612),
                            IdNavbarRelacion = 3,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 4,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2613),
                            IdNavbarRelacion = 4,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 5,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2615),
                            IdNavbarRelacion = 5,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 6,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2617),
                            IdNavbarRelacion = 6,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 7,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2618),
                            IdNavbarRelacion = 7,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 8,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2620),
                            IdNavbarRelacion = 8,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 9,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2621),
                            IdNavbarRelacion = 9,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 10,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2624),
                            IdNavbarRelacion = 10,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 11,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2625),
                            IdNavbarRelacion = 11,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 12,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2627),
                            IdNavbarRelacion = 12,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 13,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2629),
                            IdNavbarRelacion = 13,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 14,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2630),
                            IdNavbarRelacion = 14,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 15,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2633),
                            IdNavbarRelacion = 15,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 16,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2634),
                            IdNavbarRelacion = 16,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 17,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2636),
                            IdNavbarRelacion = 17,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 18,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2637),
                            IdNavbarRelacion = 18,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 19,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2640),
                            IdNavbarRelacion = 19,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 20,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2641),
                            IdNavbarRelacion = 20,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 21,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2643),
                            IdNavbarRelacion = 21,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 22,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2650),
                            IdNavbarRelacion = 22,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 23,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2652),
                            IdNavbarRelacion = 23,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 24,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2653),
                            IdNavbarRelacion = 24,
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 25,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2656),
                            IdNavbarRelacion = 1,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 26,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2658),
                            IdNavbarRelacion = 2,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 27,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2659),
                            IdNavbarRelacion = 3,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 28,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2668),
                            IdNavbarRelacion = 4,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 29,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2670),
                            IdNavbarRelacion = 5,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 30,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2671),
                            IdNavbarRelacion = 6,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 31,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2673),
                            IdNavbarRelacion = 7,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 32,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2684),
                            IdNavbarRelacion = 8,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 33,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2686),
                            IdNavbarRelacion = 9,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 34,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2687),
                            IdNavbarRelacion = 10,
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 35,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2689),
                            IdNavbarRelacion = 1,
                            IdRol = "01HTFTWTN8QAZRPG0GCVGXE05G"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 36,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2690),
                            IdNavbarRelacion = 2,
                            IdRol = "01HTFTWTN8QAZRPG0GCVGXE05G"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 37,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2692),
                            IdNavbarRelacion = 10,
                            IdRol = "01HTFTWTN8QAZRPG0GCVGXE05G"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 38,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2694),
                            IdNavbarRelacion = 1,
                            IdRol = "01HTFTX9W014EMBQDBAMDTZVN9"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 39,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2696),
                            IdNavbarRelacion = 10,
                            IdRol = "01HTFTX9W014EMBQDBAMDTZVN9"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 40,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2697),
                            IdNavbarRelacion = 1,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23C"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 41,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2699),
                            IdNavbarRelacion = 2,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23C"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 42,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2700),
                            IdNavbarRelacion = 2,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 43,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2702),
                            IdNavbarRelacion = 3,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 44,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2704),
                            IdNavbarRelacion = 4,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 45,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2705),
                            IdNavbarRelacion = 5,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 46,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2707),
                            IdNavbarRelacion = 6,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 47,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2708),
                            IdNavbarRelacion = 7,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 48,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2710),
                            IdNavbarRelacion = 11,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 49,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2711),
                            IdNavbarRelacion = 12,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 50,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2713),
                            IdNavbarRelacion = 15,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 51,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2716),
                            IdNavbarRelacion = 16,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 52,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2718),
                            IdNavbarRelacion = 17,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 53,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2720),
                            IdNavbarRelacion = 18,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 54,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2722),
                            IdNavbarRelacion = 19,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 55,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2724),
                            IdNavbarRelacion = 20,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        },
                        new
                        {
                            IdNavbarRelacionRol = 56,
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2725),
                            IdNavbarRelacion = 24,
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Nivel", b =>
                {
                    b.Property<string>("IdNivel")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdReactivoDet")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdNivel");

                    b.ToTable("Nivel", "crca");
                });

            modelBuilder.Entity("Silac.Domain.Orden", b =>
                {
                    b.Property<string>("IdOrden")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Cama")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("FechaOrden")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoraOrden")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NroAtencion")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("NroOrden")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("IdOrden");

                    b.ToTable("Orden", "labo");
                });

            modelBuilder.Entity("Silac.Domain.OrdenExamen", b =>
                {
                    b.Property<string>("IdOrdenExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("EstadoUsuarioMed")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("EstadoUsuarioTec")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("FechaResultado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUsuarioValMed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUsuarioValTec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdArea")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdItem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdLaboratorio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdOrden")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Idperfil")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("IntentoSGSS")
                        .HasColumnType("int");

                    b.Property<string>("MensajeSGSS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombrePerfil")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Resultado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SwtResultsSGSS")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioValMed")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UsuarioValTec")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdOrdenExamen");

                    b.HasIndex("IdExamen");

                    b.HasIndex("IdOrden");

                    b.HasIndex("Idperfil");

                    b.ToTable("OrdenExamen", "labo");
                });

            modelBuilder.Entity("Silac.Domain.OrdenPaciente", b =>
                {
                    b.Property<string>("IdOrdenPaciente")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("HistoriaClinica")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IdArea")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdLaboratorio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdMedico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdOrden")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdOrigen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdPaciente")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdProcedencia")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdServicio")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdOrdenPaciente");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdOrigen");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdProcedencia");

                    b.HasIndex("IdServicio");

                    b.ToTable("OrdenPaciente", "labo");
                });

            modelBuilder.Entity("Silac.Domain.Origen", b =>
                {
                    b.Property<string>("IdOrigen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdOrigen");

                    b.ToTable("Origen", "labo");

                    b.HasData(
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AA",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2202),
                            Nombre = "Areas Aministrativas"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AB",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2204),
                            Nombre = "Ayuda al diagnóstico"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AC",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2205),
                            Nombre = "Centro obstétrico"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AD",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2209),
                            Nombre = "Centro quirurgico"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AE",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2211),
                            Nombre = "Consultorio externo"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AF",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2212),
                            Nombre = "Emergencia"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AG",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2215),
                            Nombre = "Hospitalización"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AH",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2217),
                            Nombre = "Hospitalizacion Ambulatoria"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AI",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2218),
                            Nombre = "Unidad de Cuidadanos intensivos"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AJ",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2219),
                            Nombre = "Unidad de Cuidados intermedios"
                        },
                        new
                        {
                            IdOrigen = "01HTFSVFDEHJKTQAWGW634W6AK",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2221),
                            Nombre = "Unidad de Vigilancia intensiva"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Paciente", b =>
                {
                    b.Property<string>("IdPaciente")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdArea")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdLaboratorio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdPersona")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPaciente");

                    b.HasIndex("IdPersona");

                    b.ToTable("Paciente", "labo");
                });

            modelBuilder.Entity("Silac.Domain.Permiso", b =>
                {
                    b.Property<string>("IdPermiso")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPermiso");

                    b.ToTable("Permiso", "segu");

                    b.HasData(
                        new
                        {
                            IdPermiso = "BBHTFWGNWFAER1ZK118RZP3FHA",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3104),
                            Nombre = "CREATE"
                        },
                        new
                        {
                            IdPermiso = "BBHTFWGNWFAER1ZK118RZP3FHB",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3106),
                            Nombre = "READ"
                        },
                        new
                        {
                            IdPermiso = "BBHTFWGNWFAER1ZK118RZP3FHC",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3108),
                            Nombre = "UPDATE"
                        },
                        new
                        {
                            IdPermiso = "BBHTFWGNWFAER1ZK118RZP3FHD",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3109),
                            Nombre = "DELETE"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Persona", b =>
                {
                    b.Property<string>("IdPersona")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("ApeMaterno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApePaterno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdSexo")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("IdTipoDocu")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NroDocumento")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdPersona");

                    b.ToTable("Persona", "conf");

                    b.HasData(
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XM",
                            Accion = "CREA",
                            ApeMaterno = "ADMIN",
                            ApePaterno = "ADMIN",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1417),
                            IdSexo = "MASC",
                            IdTipoDocu = "DNI",
                            Nombre = "ADMIN",
                            NroDocumento = "45036140"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XN",
                            Accion = "CREA",
                            ApeMaterno = "López",
                            ApePaterno = "Pérez",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1447),
                            IdSexo = "MASC",
                            IdTipoDocu = "DNI",
                            Nombre = "Juan Carlos",
                            NroDocumento = "45036141"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XO",
                            Accion = "CREA",
                            ApeMaterno = "García",
                            ApePaterno = "Sánchez",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1455),
                            IdSexo = "MASC",
                            IdTipoDocu = "DNI",
                            Nombre = "Carlos Alberto",
                            NroDocumento = "45036142"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XP",
                            Accion = "CREA",
                            ApeMaterno = "Martínez",
                            ApePaterno = "Gómez",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1462),
                            IdSexo = "FEME",
                            IdTipoDocu = "DNI",
                            Nombre = "Ana María",
                            NroDocumento = "45036143"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6GF",
                            Accion = "CREA",
                            ApeMaterno = "Torres",
                            ApePaterno = "Martínez ",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1471),
                            IdSexo = "FEME",
                            IdTipoDocu = "DNI",
                            Nombre = "Laura Sofía",
                            NroDocumento = "45036144"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6HG",
                            Accion = "CREA",
                            ApeMaterno = "López",
                            ApePaterno = "Ruiz",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1480),
                            IdSexo = "MASC",
                            IdTipoDocu = "DNI",
                            Nombre = "José Antonio",
                            NroDocumento = "45036145"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6KJ",
                            Accion = "CREA",
                            ApeMaterno = "Ortiz",
                            ApePaterno = "García ",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1487),
                            IdSexo = "FEME",
                            IdTipoDocu = "DNI",
                            Nombre = "Marta Elena",
                            NroDocumento = "45036146"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W656",
                            Accion = "CREA",
                            ApeMaterno = "Herrera",
                            ApePaterno = "Ramírez ",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1495),
                            IdSexo = "MASC",
                            IdTipoDocu = "DNI",
                            Nombre = "Pedro Javier",
                            NroDocumento = "45036147"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6JR",
                            Accion = "CREA",
                            ApeMaterno = "Torres",
                            ApePaterno = "Morales",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1504),
                            IdSexo = "FEME",
                            IdTipoDocu = "DNI",
                            Nombre = "Lucía Alejandra",
                            NroDocumento = "45036148"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6JH",
                            Accion = "CREA",
                            ApeMaterno = "Reyes",
                            ApePaterno = "Herrera",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1512),
                            IdSexo = "MASC",
                            IdTipoDocu = "DNI",
                            Nombre = "Miguel Ángel",
                            NroDocumento = "45036149"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6KY",
                            Accion = "CREA",
                            ApeMaterno = "Vargas",
                            ApePaterno = "Morales",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1518),
                            IdSexo = "MASC",
                            IdTipoDocu = "DNI",
                            Nombre = "Antonio David",
                            NroDocumento = "45036150"
                        },
                        new
                        {
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W66T",
                            Accion = "CREA",
                            ApeMaterno = "Castro",
                            ApePaterno = "Reyes",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            FechaNacimiento = new DateTime(1988, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(1527),
                            IdSexo = "FEME",
                            IdTipoDocu = "DNI",
                            Nombre = "Carmen Teresa",
                            NroDocumento = "45036151"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Procedencia", b =>
                {
                    b.Property<string>("IdProcedencia")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProcedencia");

                    b.ToTable("Procedencia", "labo");

                    b.HasData(
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AA",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2118),
                            Nombre = "Emergencia"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AB",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2120),
                            Nombre = "Hospital Nacional Edgardo Rebagliati Martins"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AC",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2122),
                            Nombre = "Hospital Nacional Guillermo Almenara Irigoyen"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AD",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2123),
                            Nombre = "Hospital Nacional Dos de Mayo"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AE",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2125),
                            Nombre = "Instituto Nacional de Enfermedades Neoplásicas"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AF",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2126),
                            Nombre = "Hospital Nacional Arzobispo Loayza"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AG",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2128),
                            Nombre = "Hospital Nacional Cayetano Heredia"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AH",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2129),
                            Nombre = "Hospital Nacional Hipólito Unanue"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AI",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2131),
                            Nombre = "Hospital Regional Docente de Trujillo"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AJ",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2133),
                            Nombre = "Hospital Regional de Lambayeque"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AK",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2134),
                            Nombre = "Hospital Antonio Lorena"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AL",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2136),
                            Nombre = "Hospital Regional Honorio Delgado Espinoza"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AM",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2152),
                            Nombre = "Hospital Alberto Sabogal Sologuren"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AN",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2154),
                            Nombre = "Hospital de Emergencias Grau"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AO",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2155),
                            Nombre = "Hospital de Emergencias Pediátricas"
                        },
                        new
                        {
                            IdProcedencia = "01HTFSVCGDEAFRQAWGW634W6AP",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2157),
                            Nombre = "Hospital María Auxiliadora"
                        });
                });

            modelBuilder.Entity("Silac.Domain.QCRango", b =>
                {
                    b.Property<string>("IdQCRango")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Desviacion")
                        .HasPrecision(11, 6)
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdExamen")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdLote")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdNivel")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdReactivoDet")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("RangoMaximo")
                        .HasPrecision(11, 6)
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("RangoMedio")
                        .HasPrecision(11, 6)
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("RangoMinimo")
                        .HasPrecision(11, 6)
                        .HasColumnType("decimal(18, 6)");

                    b.HasKey("IdQCRango");

                    b.HasIndex("IdExamen");

                    b.HasIndex("IdLote");

                    b.HasIndex("IdNivel");

                    b.ToTable("QCRango", "crca");
                });

            modelBuilder.Entity("Silac.Domain.QCResultado", b =>
                {
                    b.Property<string>("IdQCResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaResultado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoraResultado")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("IdEquipoMedico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdLote")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdNivel")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdReactivoDet")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Resultado")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdQCResultado");

                    b.ToTable("QCResultado", "crca");
                });

            modelBuilder.Entity("Silac.Domain.Reactivo", b =>
                {
                    b.Property<string>("IdReactivo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdEquipoMedico")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdModo")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdReactivo");

                    b.ToTable("Reactivo", "crca");
                });

            modelBuilder.Entity("Silac.Domain.ReactivoDet", b =>
                {
                    b.Property<string>("IdReactivoDet")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdExamen")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdReactivo")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdReactivoDet");

                    b.HasIndex("IdExamen");

                    b.HasIndex("IdReactivo");

                    b.ToTable("ReactivoDet", "crca");
                });

            modelBuilder.Entity("Silac.Domain.ReactivoExamen", b =>
                {
                    b.Property<string>("IdReactivoExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdExamen")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdReactivoDet")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdReactivoExamen");

                    b.HasIndex("IdExamen");

                    b.HasIndex("IdReactivoDet");

                    b.ToTable("ReactivoExamen", "crca");
                });

            modelBuilder.Entity("Silac.Domain.Rept.Reporte", b =>
                {
                    b.Property<string>("IdReporte")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdReporte");

                    b.ToTable("Reporte", "rpt");
                });

            modelBuilder.Entity("Silac.Domain.Rol", b =>
                {
                    b.Property<string>("IdRol")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol", "segu");

                    b.HasData(
                        new
                        {
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2562),
                            Nombre = "SuperAdmin"
                        },
                        new
                        {
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2566),
                            Nombre = "Doctor"
                        },
                        new
                        {
                            IdRol = "01HTFTWTN8QAZRPG0GCVGXE05G",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2568),
                            Nombre = "Licenciado"
                        },
                        new
                        {
                            IdRol = "01HTFTX9W014EMBQDBAMDTZVN9",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2569),
                            Nombre = "Tecnico"
                        },
                        new
                        {
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23C",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2571),
                            Nombre = "Digitador"
                        },
                        new
                        {
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D",
                            Accion = "CREA",
                            Creado_por = "CADC",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2574),
                            Nombre = "ClienteLab"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Servicio", b =>
                {
                    b.Property<string>("IdServicio")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdServicio");

                    b.ToTable("Servicio", "labo");

                    b.HasData(
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XA",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2003),
                            Nombre = "Emergencias"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XB",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2008),
                            Nombre = "Medicina Interna"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XC",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2010),
                            Nombre = "Pediatría"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XD",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2012),
                            Nombre = "Ginecología y Obstetricia"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XE",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2013),
                            Nombre = "Cardiología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XF",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2014),
                            Nombre = "Neumología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XG",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2016),
                            Nombre = "Neurología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XH",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2017),
                            Nombre = "Cirugía General"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XI",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2019),
                            Nombre = "Traumatología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XJ",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2020),
                            Nombre = "Urología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XK",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2021),
                            Nombre = "Gastroenterología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XL",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2023),
                            Nombre = "Nefrología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XM",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2024),
                            Nombre = "Hematología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XN",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2026),
                            Nombre = "Oncología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XO",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2028),
                            Nombre = "Dermatología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XP",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2030),
                            Nombre = "Endocrinología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XQ",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2031),
                            Nombre = "Psiquiatría"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XS",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2033),
                            Nombre = "Radiología e Imagenología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XT",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2034),
                            Nombre = "Laboratorio Clínico"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XU",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2035),
                            Nombre = "Anestesiología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XV",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2037),
                            Nombre = "Medicina Nuclear"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XW",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2038),
                            Nombre = "Terapia Intensiva Neonatal"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XX",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2040),
                            Nombre = "Farmacia"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XY",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2041),
                            Nombre = "Servicios de Nutrición"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6XZ",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2043),
                            Nombre = "Banco de Sangre"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6AA",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2044),
                            Nombre = "Patología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6AB",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2045),
                            Nombre = "Infectología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6AC",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2048),
                            Nombre = "Neurocirugía"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6AD",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2050),
                            Nombre = "Osteopatía"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6AE",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2051),
                            Nombre = "Odontología"
                        },
                        new
                        {
                            IdServicio = "01HTFSVCGDEAFRQAWGW634W6AF",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2053),
                            Nombre = "Toxicología"
                        });
                });

            modelBuilder.Entity("Silac.Domain.SistemaCliente", b =>
                {
                    b.Property<string>("IdSistemaCliente")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("BaseDeDatos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Contrasena")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdTipoBaseDato")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Server")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Usuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdSistemaCliente");

                    b.ToTable("SistemaCliente", "conf");
                });

            modelBuilder.Entity("Silac.Domain.SistemaClienteExamen", b =>
                {
                    b.Property<string>("IdSistemaClienteExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CodDevuelve")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodRecibe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdSistemaCliente")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdSistemaClienteExamen");

                    b.HasIndex("IdExamen");

                    b.HasIndex("IdSistemaCliente");

                    b.ToTable("SistemaClienteExamen", "conf");
                });

            modelBuilder.Entity("Silac.Domain.TablaMaestra", b =>
                {
                    b.Property<int>("IdTablaMaestra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTablaMaestra"));

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Codigo")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tabla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTablaMaestra");

                    b.ToTable("TablaMaestra", "conf");

                    b.HasData(
                        new
                        {
                            IdTablaMaestra = 1,
                            Accion = "CREA",
                            Codigo = "ACTI",
                            Color = "qualified",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2882),
                            Nombre = "ACTIVO",
                            Tabla = "States"
                        },
                        new
                        {
                            IdTablaMaestra = 2,
                            Accion = "CREA",
                            Codigo = "DESA",
                            Color = "unqualified",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2887),
                            Nombre = "DESACTIVADO",
                            Tabla = "States"
                        },
                        new
                        {
                            IdTablaMaestra = 3,
                            Accion = "CREA",
                            Codigo = "ELIM",
                            Color = "unqualified",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2889),
                            Nombre = "ELIMINADO",
                            Tabla = "States"
                        },
                        new
                        {
                            IdTablaMaestra = 4,
                            Accion = "CREA",
                            Codigo = "CREA",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2891),
                            Nombre = "CREADO",
                            Tabla = "Actions"
                        },
                        new
                        {
                            IdTablaMaestra = 5,
                            Accion = "CREA",
                            Codigo = "MODI",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2893),
                            Nombre = "MODIFICADO",
                            Tabla = "Actions"
                        },
                        new
                        {
                            IdTablaMaestra = 6,
                            Accion = "CREA",
                            Codigo = "ELIM",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2895),
                            Nombre = "ELIMINADO",
                            Tabla = "Actions"
                        },
                        new
                        {
                            IdTablaMaestra = 7,
                            Accion = "CREA",
                            Codigo = "AMBO",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2897),
                            Nombre = "AMBOS",
                            Tabla = "Sexo"
                        },
                        new
                        {
                            IdTablaMaestra = 8,
                            Accion = "CREA",
                            Codigo = "MASC",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2901),
                            Nombre = "MASCULINO",
                            Tabla = "Sexo"
                        },
                        new
                        {
                            IdTablaMaestra = 9,
                            Accion = "CREA",
                            Codigo = "FEME",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2902),
                            Nombre = "FEMENINO",
                            Tabla = "Sexo"
                        },
                        new
                        {
                            IdTablaMaestra = 10,
                            Accion = "CREA",
                            Codigo = "DNI",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2904),
                            Nombre = "DNI",
                            Tabla = "TipoDocumento"
                        },
                        new
                        {
                            IdTablaMaestra = 11,
                            Accion = "CREA",
                            Codigo = "ORDE",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2905),
                            Nombre = "POR ORDEN",
                            Tabla = "TipoOrden"
                        },
                        new
                        {
                            IdTablaMaestra = 12,
                            Accion = "CREA",
                            Codigo = "EXAM",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2907),
                            Nombre = "POR EXAMEN",
                            Tabla = "TipoOrden"
                        },
                        new
                        {
                            IdTablaMaestra = 13,
                            Accion = "CREA",
                            Codigo = "TODO",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2908),
                            Nombre = "TODOS",
                            Tabla = "EstadoOrden"
                        },
                        new
                        {
                            IdTablaMaestra = 14,
                            Accion = "CREA",
                            Codigo = "PEND",
                            Color = "proposal",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2910),
                            Nombre = "PENDIENTE",
                            Tabla = "EstadoOrden"
                        },
                        new
                        {
                            IdTablaMaestra = 15,
                            Accion = "CREA",
                            Codigo = "PVAL",
                            Color = "new",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2912),
                            Nombre = "POR VALIDAR",
                            Tabla = "EstadoOrden"
                        },
                        new
                        {
                            IdTablaMaestra = 16,
                            Accion = "CREA",
                            Codigo = "VALI",
                            Color = "qualified",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2922),
                            Nombre = "VALIDADO",
                            Tabla = "EstadoOrden"
                        },
                        new
                        {
                            IdTablaMaestra = 17,
                            Accion = "CREA",
                            Codigo = "NORE",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2924),
                            Nombre = "NO REACTIVO",
                            Tabla = "Interpretado"
                        },
                        new
                        {
                            IdTablaMaestra = 18,
                            Accion = "CREA",
                            Codigo = "INDE",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2926),
                            Nombre = "INDETERMINADO",
                            Tabla = "Interpretado"
                        },
                        new
                        {
                            IdTablaMaestra = 19,
                            Accion = "CREA",
                            Codigo = "REAC",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2927),
                            Nombre = "REACTIVO",
                            Tabla = "Interpretado"
                        },
                        new
                        {
                            IdTablaMaestra = 20,
                            Accion = "CREA",
                            Codigo = "SQL",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2929),
                            Nombre = "SQL SERVER",
                            Tabla = "TipoBaseDato"
                        },
                        new
                        {
                            IdTablaMaestra = 21,
                            Accion = "CREA",
                            Codigo = "MYSQ",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2932),
                            Nombre = "MY SQL",
                            Tabla = "TipoBaseDato"
                        },
                        new
                        {
                            IdTablaMaestra = 22,
                            Accion = "CREA",
                            Codigo = "POST",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2933),
                            Nombre = "POSTGREST",
                            Tabla = "TipoBaseDato"
                        },
                        new
                        {
                            IdTablaMaestra = 23,
                            Accion = "CREA",
                            Codigo = "<",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2935),
                            Nombre = "<",
                            Tabla = "SignoComparativo"
                        },
                        new
                        {
                            IdTablaMaestra = 24,
                            Accion = "CREA",
                            Codigo = ">",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2936),
                            Nombre = ">",
                            Tabla = "SignoComparativo"
                        },
                        new
                        {
                            IdTablaMaestra = 25,
                            Accion = "CREA",
                            Codigo = "=",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2938),
                            Nombre = "=",
                            Tabla = "SignoComparativo"
                        },
                        new
                        {
                            IdTablaMaestra = 26,
                            Accion = "CREA",
                            Codigo = ">=",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2939),
                            Nombre = ">=",
                            Tabla = "SignoComparativo"
                        },
                        new
                        {
                            IdTablaMaestra = 27,
                            Accion = "CREA",
                            Codigo = "<=",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2941),
                            Nombre = "<=",
                            Tabla = "SignoComparativo"
                        },
                        new
                        {
                            IdTablaMaestra = 28,
                            Accion = "CREA",
                            Codigo = "SEXO",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2942),
                            Nombre = "SEXO",
                            Tabla = "TipoConfRango"
                        },
                        new
                        {
                            IdTablaMaestra = 29,
                            Accion = "CREA",
                            Codigo = "INT1",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2944),
                            Nombre = "INTERPRETADO 1",
                            Tabla = "TipoConfRango"
                        },
                        new
                        {
                            IdTablaMaestra = 30,
                            Accion = "CREA",
                            Codigo = "INT2",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2945),
                            Nombre = "INTERPRETADO 2",
                            Tabla = "TipoConfRango"
                        },
                        new
                        {
                            IdTablaMaestra = 31,
                            Accion = "CREA",
                            Codigo = "POS",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2947),
                            Nombre = "POSITIVO",
                            Tabla = "Interpretado2"
                        },
                        new
                        {
                            IdTablaMaestra = 32,
                            Accion = "CREA",
                            Codigo = "IND",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2948),
                            Nombre = "INDETERMINADO",
                            Tabla = "Interpretado2"
                        },
                        new
                        {
                            IdTablaMaestra = 33,
                            Accion = "CREA",
                            Codigo = "NEG",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2950),
                            Nombre = "NEGATIVO",
                            Tabla = "Interpretado2"
                        },
                        new
                        {
                            IdTablaMaestra = 34,
                            Accion = "CREA",
                            Codigo = "0001",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2952),
                            Nombre = "INICIO",
                            Tabla = "Tracking"
                        },
                        new
                        {
                            IdTablaMaestra = 35,
                            Accion = "CREA",
                            Codigo = "0002",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2954),
                            Nombre = "LECTURA DE ETIQUETA",
                            Tabla = "Tracking"
                        },
                        new
                        {
                            IdTablaMaestra = 36,
                            Accion = "CREA",
                            Codigo = "0003",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2956),
                            Nombre = "ENVIO DE RESULTADOS",
                            Tabla = "Tracking"
                        },
                        new
                        {
                            IdTablaMaestra = 37,
                            Accion = "CREA",
                            Codigo = "0004",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2957),
                            Nombre = "PREVALIDACION",
                            Tabla = "Tracking"
                        },
                        new
                        {
                            IdTablaMaestra = 38,
                            Accion = "CREA",
                            Codigo = "0005",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(2959),
                            Nombre = "VALIDACION",
                            Tabla = "Tracking"
                        },
                        new
                        {
                            IdTablaMaestra = 39,
                            Accion = "CREA",
                            Codigo = "PEXA",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "POR EXAMEN",
                            Tabla = "Modo"
                        },
                        new
                        {
                            IdTablaMaestra = 40,
                            Accion = "CREA",
                            Codigo = "GEXA",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "POR CONTROL",
                            Tabla = "Modo"
                        },
                        new
                        {
                            IdTablaMaestra = 41,
                            Accion = "CREA",
                            Codigo = "INT3",
                            Creado_por = "FCONDOR",
                            Fecha_creacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "RANGO NUMERICO",
                            Tabla = "TipoConfRango"
                        });
                });

            modelBuilder.Entity("Silac.Domain.TipoMuestra", b =>
                {
                    b.Property<string>("IdTipoMuestra")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("CodigoTipoMuestra")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoMuestra");

                    b.ToTable("TipoMuestra", "conf");

                    b.HasData(
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEA",
                            Accion = "CREA",
                            CodigoTipoMuestra = "01",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3231),
                            Nombre = "SANGRE TOTAL"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FKSB",
                            Accion = "CREA",
                            CodigoTipoMuestra = "02",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3233),
                            Nombre = "PLASMA"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCC",
                            Accion = "CREA",
                            CodigoTipoMuestra = "03",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3235),
                            Nombre = "ORINA"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFD",
                            Accion = "CREA",
                            CodigoTipoMuestra = "04",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3236),
                            Nombre = "SUERO"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FWEE",
                            Accion = "CREA",
                            CodigoTipoMuestra = "05",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3238),
                            Nombre = "SEMEN"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3FKSF",
                            Accion = "CREA",
                            CodigoTipoMuestra = "05",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3240),
                            Nombre = "ACIDO NUCLEICO"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LMFG",
                            Accion = "CREA",
                            CodigoTipoMuestra = "08",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3242),
                            Nombre = "MEDULA OSEA"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCH",
                            Accion = "CREA",
                            CodigoTipoMuestra = "09",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3244),
                            Nombre = "CARRILLO BUCAL"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCI",
                            Accion = "CREA",
                            CodigoTipoMuestra = "10",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3245),
                            Nombre = "LIQUIDO"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCJ",
                            Accion = "CREA",
                            CodigoTipoMuestra = "11",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3247),
                            Nombre = "ESPUTO"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCK",
                            Accion = "CREA",
                            CodigoTipoMuestra = "12",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3249),
                            Nombre = "HECES"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCL",
                            Accion = "CREA",
                            CodigoTipoMuestra = "13",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3250),
                            Nombre = "MUESTRA DERMICA"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCM",
                            Accion = "CREA",
                            CodigoTipoMuestra = "14",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3252),
                            Nombre = "SECRECION URETRAL"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCN",
                            Accion = "CREA",
                            CodigoTipoMuestra = "15",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3253),
                            Nombre = "SECRECION VAGINAL"
                        },
                        new
                        {
                            IdTipoMuestra = "01HTFRGNWFAERDZK11DRZP3LKCO",
                            Accion = "CREA",
                            CodigoTipoMuestra = "16",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3255),
                            Nombre = "SECRECION FARINGEA"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Tracking", b =>
                {
                    b.Property<int?>("IdTracking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IdTracking"));

                    b.Property<string>("ApellidoMaternoPaciente")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ApellidoPaternoPaciente")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("DocumentoPaciente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("EstadoEnvioResultados")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoImpresionEtiqueta")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoLecturaEtiqueta")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoPrevalidacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoValidacion")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacionEnvioResultados")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaActualizacionImpresionEtiqueta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaActualizacionLecturaEtiqueta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaActualizacionPrevalidacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaActualizacionValidacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEnvioResultados")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaImpresionEtiqueta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaLecturaEtiqueta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPrevalidacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaValidacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdOrden")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdOrdenExamen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdTipoMuestra")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NombrePaciente")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("NroOrden")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UsuarioEnvioResultados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioImpresionEtiqueta")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UsuarioLecturaEtiqueta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioPrevalidacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioValidacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTracking");

                    b.ToTable("Tracking", "trak");
                });

            modelBuilder.Entity("Silac.Domain.Usuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CodExterno")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdPersona")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool?>("Permiso_Escritura")
                        .HasColumnType("bit");

                    b.Property<byte>("Primer_acceso")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPersona");

                    b.ToTable("Usuario", "segu");

                    b.HasData(
                        new
                        {
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F4D",
                            Accion = "CREA",
                            CodExterno = "",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3026),
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XM",
                            Password = "Yt6ay0mRsy2nl70yCdcRGg==",
                            Permiso_Escritura = true,
                            Primer_acceso = (byte)0,
                            UserName = "ADMIN"
                        },
                        new
                        {
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F3D",
                            Accion = "CREA",
                            CodExterno = "",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3029),
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XN",
                            Password = "Yt6ay0mRsy2nl70yCdcRGg==",
                            Permiso_Escritura = true,
                            Primer_acceso = (byte)0,
                            UserName = "USER1"
                        },
                        new
                        {
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F3E",
                            Accion = "CREA",
                            CodExterno = "",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3031),
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XO",
                            Password = "Yt6ay0mRsy2nl70yCdcRGg==",
                            Permiso_Escritura = true,
                            Primer_acceso = (byte)0,
                            UserName = "USER2"
                        },
                        new
                        {
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F3F",
                            Accion = "CREA",
                            CodExterno = "",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3035),
                            IdPersona = "01HTFSVCJC0PFRQAWGW634W6XP",
                            Password = "Yt6ay0mRsy2nl70yCdcRGg==",
                            Permiso_Escritura = false,
                            Primer_acceso = (byte)0,
                            UserName = "USER3"
                        });
                });

            modelBuilder.Entity("Silac.Domain.UsuarioArea", b =>
                {
                    b.Property<string>("IdUsuarioArea")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdArea")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdUsuario")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuarioArea");

                    b.HasIndex("IdArea");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioArea", "segu");

                    b.HasData(
                        new
                        {
                            IdUsuarioArea = "01HTFWGNWFAER1ZK118RZP3FHB",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3175),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F3D"
                        },
                        new
                        {
                            IdUsuarioArea = "01HTFWGNWFAER1ZK118RZP3FHC",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3177),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F3E"
                        },
                        new
                        {
                            IdUsuarioArea = "01HTFWGNWFAER1ZK118RZP3FHD",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3178),
                            IdArea = "01HTFVC8V8BDJVZ8T4Y9GTGFXR",
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F3F"
                        });
                });

            modelBuilder.Entity("Silac.Domain.UsuarioHospital", b =>
                {
                    b.Property<string>("IdUsuarioHospital")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdHospital")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuarioHospital");

                    b.HasIndex("IdHospital");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioHospital", "segu");
                });

            modelBuilder.Entity("Silac.Domain.UsuarioRol", b =>
                {
                    b.Property<string>("IdUsuarioRol")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("Codigo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Codigo"));

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdRol")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuarioRol");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioRol", "segu");

                    b.HasData(
                        new
                        {
                            IdUsuarioRol = "01HTFWGNWFAER1ZK118RZP3FHA",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3069),
                            IdRol = "01HTFTW32KEH24P284SNVH8QPD",
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F4D"
                        },
                        new
                        {
                            IdUsuarioRol = "01HTFWGNWFAER1ZK118RZP3FHB",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3071),
                            IdRol = "01HTFTWFZ6KMPARYMV6RKBBKTG",
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F3D"
                        },
                        new
                        {
                            IdUsuarioRol = "01HTFWGNWFAER1ZK118RZP3FHC",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3073),
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D",
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F3E"
                        },
                        new
                        {
                            IdUsuarioRol = "01HTFWGNWFAER1ZK118RZP3FHD",
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3075),
                            IdRol = "01HTFTXWJKVS3CN09Y479MG23D",
                            IdUsuario = "01HTFSTS3J5AETX0AK92VB9F3F"
                        });
                });

            modelBuilder.Entity("Silac.Domain.UsuarioRolPermiso", b =>
                {
                    b.Property<int>("IdUsuarioRolPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuarioRolPermiso"));

                    b.Property<string>("Accion")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Creado_por")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdPermiso")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IdUsuarioRol")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Modificado_por")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuarioRolPermiso");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdUsuarioRol");

                    b.ToTable("UsuarioRolPermiso", "segu");

                    b.HasData(
                        new
                        {
                            IdUsuarioRolPermiso = 1,
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3141),
                            IdPermiso = "BBHTFWGNWFAER1ZK118RZP3FHA",
                            IdUsuarioRol = "01HTFWGNWFAER1ZK118RZP3FHA"
                        },
                        new
                        {
                            IdUsuarioRolPermiso = 2,
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3143),
                            IdPermiso = "BBHTFWGNWFAER1ZK118RZP3FHB",
                            IdUsuarioRol = "01HTFWGNWFAER1ZK118RZP3FHA"
                        },
                        new
                        {
                            IdUsuarioRolPermiso = 3,
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3146),
                            IdPermiso = "BBHTFWGNWFAER1ZK118RZP3FHC",
                            IdUsuarioRol = "01HTFWGNWFAER1ZK118RZP3FHA"
                        },
                        new
                        {
                            IdUsuarioRolPermiso = 4,
                            Accion = "CREA",
                            Creado_por = "ADMIN",
                            Estado = "ACTI",
                            Fecha_creacion = new DateTime(2024, 11, 2, 14, 53, 27, 929, DateTimeKind.Local).AddTicks(3148),
                            IdPermiso = "BBHTFWGNWFAER1ZK118RZP3FHD",
                            IdUsuarioRol = "01HTFWGNWFAER1ZK118RZP3FHA"
                        });
                });

            modelBuilder.Entity("Silac.Domain.Area", b =>
                {
                    b.HasOne("Silac.Domain.Laboratorio", "Laboratorio")
                        .WithMany()
                        .HasForeignKey("IdLaboratorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("Silac.Domain.Conf.PerfilExamen", b =>
                {
                    b.HasOne("Silac.Domain.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("IdExamen");

                    b.HasOne("Silac.Domain.Conf.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("IdPerfil");

                    b.Navigation("Examen");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Silac.Domain.EquipoMedicoAnalizador", b =>
                {
                    b.HasOne("Silac.Domain.EquipoMedico", "EquipoMedico")
                        .WithMany()
                        .HasForeignKey("IdEquipoMedico");

                    b.Navigation("EquipoMedico");
                });

            modelBuilder.Entity("Silac.Domain.EquipoMedicoExamen", b =>
                {
                    b.HasOne("Silac.Domain.EquipoMedico", "EquipoMedico")
                        .WithMany()
                        .HasForeignKey("IdEquipoMedico");

                    b.HasOne("Silac.Domain.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("IdExamen");

                    b.Navigation("EquipoMedico");

                    b.Navigation("Examen");
                });

            modelBuilder.Entity("Silac.Domain.Examen", b =>
                {
                    b.HasOne("Silac.Domain.Area", "Area")
                        .WithMany()
                        .HasForeignKey("IdArea");

                    b.HasOne("Silac.Domain.TipoMuestra", "TipoMuestra")
                        .WithMany()
                        .HasForeignKey("IdTipoMuestra");

                    b.Navigation("Area");

                    b.Navigation("TipoMuestra");
                });

            modelBuilder.Entity("Silac.Domain.ExamenRango", b =>
                {
                    b.HasOne("Silac.Domain.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("IdExamen");

                    b.Navigation("Examen");
                });

            modelBuilder.Entity("Silac.Domain.Medico", b =>
                {
                    b.HasOne("Silac.Domain.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Silac.Domain.NavbarPermiso", b =>
                {
                    b.HasOne("Silac.Domain.Navbar", "Navbar")
                        .WithMany()
                        .HasForeignKey("IdNavbar");

                    b.Navigation("Navbar");
                });

            modelBuilder.Entity("Silac.Domain.NavbarRelacion", b =>
                {
                    b.HasOne("Silac.Domain.Navbar", "Navbar")
                        .WithMany()
                        .HasForeignKey("IdNavbarPrincipal");

                    b.Navigation("Navbar");
                });

            modelBuilder.Entity("Silac.Domain.NavbarRelacionRol", b =>
                {
                    b.HasOne("Silac.Domain.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol");

                    b.HasOne("Silac.Domain.NavbarRelacion", "navbarRelacion")
                        .WithMany()
                        .HasForeignKey("navbarRelacionIdNavbarRelacion");

                    b.Navigation("Rol");

                    b.Navigation("navbarRelacion");
                });

            modelBuilder.Entity("Silac.Domain.OrdenExamen", b =>
                {
                    b.HasOne("Silac.Domain.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("IdExamen");

                    b.HasOne("Silac.Domain.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("IdOrden");

                    b.HasOne("Silac.Domain.Conf.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("Idperfil");

                    b.Navigation("Examen");

                    b.Navigation("Orden");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Silac.Domain.OrdenPaciente", b =>
                {
                    b.HasOne("Silac.Domain.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("IdMedico");

                    b.HasOne("Silac.Domain.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("IdOrden");

                    b.HasOne("Silac.Domain.Origen", "Origen")
                        .WithMany()
                        .HasForeignKey("IdOrigen");

                    b.HasOne("Silac.Domain.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente");

                    b.HasOne("Silac.Domain.Procedencia", "Procedencia")
                        .WithMany()
                        .HasForeignKey("IdProcedencia");

                    b.HasOne("Silac.Domain.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("IdServicio");

                    b.Navigation("Medico");

                    b.Navigation("Orden");

                    b.Navigation("Origen");

                    b.Navigation("Paciente");

                    b.Navigation("Procedencia");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Silac.Domain.Paciente", b =>
                {
                    b.HasOne("Silac.Domain.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Silac.Domain.QCRango", b =>
                {
                    b.HasOne("Silac.Domain.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("IdExamen");

                    b.HasOne("Silac.Domain.Lote", "Lote")
                        .WithMany()
                        .HasForeignKey("IdLote");

                    b.HasOne("Silac.Domain.Nivel", "Nivel")
                        .WithMany()
                        .HasForeignKey("IdNivel");

                    b.Navigation("Examen");

                    b.Navigation("Lote");

                    b.Navigation("Nivel");
                });

            modelBuilder.Entity("Silac.Domain.ReactivoDet", b =>
                {
                    b.HasOne("Silac.Domain.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("IdExamen");

                    b.HasOne("Silac.Domain.Reactivo", "Reactivo")
                        .WithMany()
                        .HasForeignKey("IdReactivo");

                    b.Navigation("Examen");

                    b.Navigation("Reactivo");
                });

            modelBuilder.Entity("Silac.Domain.ReactivoExamen", b =>
                {
                    b.HasOne("Silac.Domain.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("IdExamen");

                    b.HasOne("Silac.Domain.ReactivoDet", "ReactivoDet")
                        .WithMany()
                        .HasForeignKey("IdReactivoDet");

                    b.Navigation("Examen");

                    b.Navigation("ReactivoDet");
                });

            modelBuilder.Entity("Silac.Domain.SistemaClienteExamen", b =>
                {
                    b.HasOne("Silac.Domain.Examen", "Examen")
                        .WithMany()
                        .HasForeignKey("IdExamen");

                    b.HasOne("Silac.Domain.SistemaCliente", "SistemaCliente")
                        .WithMany()
                        .HasForeignKey("IdSistemaCliente");

                    b.Navigation("Examen");

                    b.Navigation("SistemaCliente");
                });

            modelBuilder.Entity("Silac.Domain.Usuario", b =>
                {
                    b.HasOne("Silac.Domain.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Silac.Domain.UsuarioArea", b =>
                {
                    b.HasOne("Silac.Domain.Area", "Area")
                        .WithMany()
                        .HasForeignKey("IdArea");

                    b.HasOne("Silac.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Area");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Silac.Domain.UsuarioHospital", b =>
                {
                    b.HasOne("Silac.Domain.Hospital", "Hospital")
                        .WithMany()
                        .HasForeignKey("IdHospital");

                    b.HasOne("Silac.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Hospital");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Silac.Domain.UsuarioRol", b =>
                {
                    b.HasOne("Silac.Domain.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol");

                    b.HasOne("Silac.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Silac.Domain.UsuarioRolPermiso", b =>
                {
                    b.HasOne("Silac.Domain.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("IdPermiso");

                    b.HasOne("Silac.Domain.UsuarioRol", "UsuarioRol")
                        .WithMany()
                        .HasForeignKey("IdUsuarioRol");

                    b.Navigation("Permiso");

                    b.Navigation("UsuarioRol");
                });
#pragma warning restore 612, 618
        }
    }
}
